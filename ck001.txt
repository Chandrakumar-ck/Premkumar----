<!DOCTYPE html>
<html>
  <head>
    <title>Placement Management System</title>
    <link rel="stylesheet" href="style.css">
  </head>
  <body>
    <h1>Placement Management System</h1>
    <div id="placements"></div>
    <div id="students"></div>
    <script src="script.js"></script>
  </body>
</html>
body {
  font-family: Arial, sans-serif;
  margin: 0;
}

h1 {
  margin: 0;
  padding: 20px;
  background-color: #333;
  color: #fff;
  text-align: center;
}

#placements, #students {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 20px;
  margin: 20px;
}

.card {
  background-color: #f5f5f5;
  border-radius: 5px;
  padding: 20px;
}

.card h2 {
  margin: 0;
}

.card p {
  margin: 10px 0 0;
}

.button {
  background-color: #333;
  color: #fff;
  padding: 10px;
  border-radius: 5px;
  text-align: center;
  cursor: pointer;
}

.button:hover {
  background-color: #555;
}
const placementsContainer = document.getElementById('placements');
const studentsContainer = document.getElementById('students');

// Load placements
fetch('placements.json')
  .then(response => response.json())
  .then(placements => {
    placements.forEach(placement => {
      const card = createPlacementCard(placement);
      placementsContainer.appendChild(card);
    });
  });

// Load students
fetch('students.json')
  .then(response => response.json())
  .then(students => {
    students.forEach(student => {
      const card = createStudentCard(student);
      studentsContainer.appendChild(card);
    });
  });

function createPlacementCard(placement) {
  const card = document.createElement('div');
  card.classList.add('card');
  const company = document.createElement('h2');
  company.textContent = placement.company;
  card.appendChild(company);
  const jobTitle = document.createElement('p');
  jobTitle.textContent = placement.job_title;
  card.appendChild(jobTitle);
  const jobDescription = document.createElement('p');
  jobDescription.textContent = placement.job_description;
  card.appendChild(jobDescription);
  const button = document.createElement('div');
  button.classList.add('button');
  button.textContent = 'Apply';
  card.appendChild(button);
  return card;
}

function createStudentCard(student) {
  const card = document.createElement('div');
  card.classList.add('card');
  const name = document.createElement('h2');
  name.textContent = student.name;
  card.appendChild(name);
  const email = document.createElement('p');
  email.textContent = student.email;
  card.appendChild(email);
  const major = document.createElement('
const placementsContainer = document.getElementById('placements');
const studentsContainer = document.getElementById('students');

// Load placements
fetch('placements.json')
  .then(response => response.json())
  .then(placements => {
    placements.forEach(placement => {
      const card = createPlacementCard(placement);
      placementsContainer.appendChild(card);
    });
  });

// Load students
fetch('students.json')
  .then(response => response.json())
  .then(students => {
    students.forEach(student => {
      const card = createStudentCard(student);
      studentsContainer.appendChild(card);
    });
  });

function createPlacementCard(placement) {
  const card = document.createElement('div');
  card.classList.add('card');
  const company = document.createElement('h2');
  company.textContent = placement.company;
  card.appendChild(company);
  const jobTitle = document.createElement('p');
  jobTitle.textContent = placement.job_title;
  card.appendChild(jobTitle);
  const jobDescription = document.createElement('p');
  jobDescription.textContent = placement.job_description;
  card.appendChild(jobDescription);
  const button = document.createElement('div');
  button.classList.add('button');
  button.textContent = 'Apply';
  card.appendChild(button);
  return card;
}

function createStudentCard(student) {
  const card = document.createElement('div');
  card.classList.add('card');
  const name = document.createElement('h2');
  name.textContent = student.name;
  card.appendChild(name);
  const email = document.createElement('p');
  email.textContent = student.email;
  card.appendChild(email);
  const major = document.createElement('p');
  major.textContent = student.major;
  card.appendChild(major);
  const graduationYear = document.createElement('p');
  graduationYear.textContent = student.graduation_year;
  card.appendChild(graduationYear);
  const gpa = document.createElement('p');
  gpa.textContent = `GPA: ${student.gpa}`;
  card.appendChild(gpa);
  return card;
}
[
  {
    "company": "Acme Corp",
    "job_title": "Software Engineer",
    "job_description": "We are seeking a talented software engineer to work on our flagship product."
  },
  {
    "company": "Globex Corporation",
    "job_title": "Business Analyst",
    "job_description": "We are looking for a business analyst to help us identify opportunities for growth and improvement."
  }
]
[
  {
    "name": "Alice Smith",
    "email": "alice.smith@example.com",
    "major": "Computer Science",
    "graduation_year": 2022,
    "gpa": 3.5
  },
  {
    "name": "Bob Johnson",
    "email": "bob.johnson@example.com",
    "major": "Business Administration",
    "graduation_year": 2023,
    "gpa": 3.8
  }
]
const express = require('express');
const app = express();
const port = 3000;

app.use(express.static('public'));

app.get('/placements', (req, res) => {
  const placements = require('./placements.json');
  res.json(placements);
});

app.get('/students', (req, res) => {
  const students = require('./students.json');
  res.json(students);
});

app.listen(port, () => {
  console.log(`Server listening at http://localhost:${port}`);
});
